# reformat for merging
df.journals$id <- NULL
df.journals$journal_title <- as.factor(df.journals$journal_title)
df <- merge(df.journals, classes)
df %>%
group_by(class, year) %>%
summarize(sum.recs = sum(records)) -> df.sums
x11()
ggplot(df.sums, aes(x = year, y = sum.recs, color = class))+
geom_line(size = 2)
# [37] "total_ecology_pubs_by_year.txt"
# [38] "total_ecology_pubs_for2010_to_2019.txt"
# [39] "total_forestry_pubs_by_year.txt"
# [40] "total_forestry_pubs_for2010_to_2019.txt"
# total ecology pubs
total.eco <- read_delim("./data/total_ecology_pubs_by_year.txt", delim = "\t")
names(total.eco)[1] <- "year"
total.eco <- total.eco[,c(1,2)]
total.eco <- total.eco[-12,]
total.eco$class = as.factor("ecology")
# total forestry pubs
total.for <- read_delim("./data/total_forestry_pubs_by_year.txt", delim = "\t")
names(total.for)[1] <- "year"
total.for <- total.for[,c(1,2)]
total.for <- total.for[-12,]
total.for$class = as.factor("forestry")
total.for
totals <- rbind(total.eco, total.for)
big.boi <- merge(df.sums, totals)
big.boi$propR <- big.boi$sum.recs / big.boi$records
x11(width = 8, height = 3)
ggplot(big.boi, aes(x = year, y = (propR * 100), color = class))+
geom_line(size = 2, alpha = 0.6)+
geom_point(size = 3, shape = 21, fill = "white")+
theme_minimal()+
scale_x_continuous(
labels = scales::number_format(accuracy = 1, big.mark = ""))+
scale_color_manual(
name="Journal Class",
values = c(
"ecology" = "#e41a1c",
"forestry" ="#377eb8"))+
xlab("")+
ylab(expression(atop("Citations of the R Programming Language", paste("in the top 20 journals of each field (%)"))))
x11(width = 8, height = 3)
ggplot(big.boi, aes(x = year, y = (propR * 100), color = class))+
geom_line(size = 2, alpha = 0.6)+
geom_point(size = 3, shape = 21, fill = "white")+
theme_minimal()+
scale_x_continuous(
labels = scales::number_format(accuracy = 1, big.mark = ""))+
scale_color_manual(
name="Journal Class",
values = c(
"ecology" = "#e41a1c",
"forestry" ="#377eb8"))+
theme(legend.position=c(1,1), legend.justification=c(1,1))+
xlab("")+
ylab(expression(atop("Citations of the R Programming Language", paste("in the top 20 journals of each field (%)"))))
x11(width = 6, height = 6)
ggplot(big.boi, aes(x = year, y = (propR * 100), color = class))+
geom_line(size = 2, alpha = 0.6)+
geom_point(size = 3, shape = 21, fill = "white")+
theme_minimal()+
scale_x_continuous(
labels = scales::number_format(accuracy = 1, big.mark = ""))+
scale_color_manual(
name="Journal Class",
values = c(
"ecology" = "#e41a1c",
"forestry" ="#377eb8"))+
theme(legend.position=c(0.02,1), legend.justification=c(0.02,1))+
xlab("")+
ylab(expression(atop("Citations of the R Programming Language", paste("in the top 20 journals of each field (%)"))))
x11(width = 6, height = 6)
ggplot(big.boi, aes(x = year, y = (propR * 100), color = class))+
geom_line(size = 2, alpha = 0.6)+
geom_point(size = 3, shape = 21, fill = "white")+
theme_minimal()+
scale_x_continuous(
labels = scales::number_format(accuracy = 1, big.mark = ""))+
scale_color_manual(
name="Journal Class",
values = c(
"ecology" = "#e41a1c",
"forestry" ="#377eb8"))+
theme(legend.position=c(0.02,1), legend.justification=c(0.02,1))+
xlab("")+
ylab(expression(atop("Percentage of papers citing R ", paste("in the top 20 journals of each field"))))
3990 - 1050 -1540
-127.61
1400-128
citation("forestGEO")
citation("ForestGEO")
install.packages("ForestGEO")
install.packages("forestGEO")
citation("fgeo")
install.packages("fgeo")
citation("fgeo")
citation("rFIA")
citation("phenocamr")
citaiton("ForestFit")
citaiton("ForestFIT")
install.packages("ForestFit")
citation("ForestFit")
# install the package if not already installed and call it via library()
if(!require(ForestFit)){install.packages("ForestFit")}
library(ForestFit)
library(fortedata)
library(tidyverse)
inv <- fortedata::fd_inventory()
# filter to plot
inv %>%
filter(subplot_id == "D03E" & health_status == "L") %>%
data.frame() -> D03E
#fit mixture
#   Modeling diameter distributions of grouped
# data using finite mixture models
# The fitmixturegrouped function provides an interface for
# fitting a wide-range of finite mixture distributions to grouped
# data and takes the form
fitmixture(D03E$dbh_cm, "log-normal", 3)
# parameters from model
weight <- c(0.280, 0.236, 0.4833)
alpha <- c(3.044, 3.418, 2.304)
beta <- c(0.13868, 0.1036, 0.2514)
param <- c(weight, alpha, beta)
XX <- seq(0, max(D03E$dbh_cm), 0.01)
pdf <- dmixture(XX, "log-normal", 3, param)
x11()
hist(D03E$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40))
lines(XX, pdf, col = "blue")
# filter to plot
inv %>%
filter(subplot_id == "A04W" & health_status == "L") %>%
data.frame() -> A04W
#fit mixture
fitmixture(A04W$dbh_cm, "log-normal", 3)
# parameters from model
weight2 <- c(0.6989, 0.067, 0.234)
alpha2 <- c(2.725, 3.937, 3.414)
beta2 <- c(0.2912, 0.0816, 0.155)
param2 <- c(weight2, alpha2, beta2)
XX2 <- seq(0, max(A04W$dbh_cm), 0.01)
pdf2 <- dmixture(XX2, "log-normal", 3, param2)
x11()
hist(D03E$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40),
col = rgb(255,192,203, max = 255, alpha = 200), xlab="DBH [cm]", main = "")
hist(A04W$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40),
col = rgb(173,216,230, max = 255, alpha = 200), add = TRUE,
xlab="DBH [cm]", main = "")
lines(XX, pdf, col = "red", lwd = 3)
lines(XX2, pdf2, col = "blue4", lwd = 3)
#
D03E %>%
dplyr::group_by(as.factor(species)) %>%
summarise(total.dbh = sum(dbh_cm, na.rm = TRUE), .groups = 'drop')
> c1 <- rgb(173,216,230,max = 255, alpha = 80, names = "lt.blue")
inv <- fortedata::fd_inventory()
# filter to plot
inv %>%
filter(subplot_id == "D03E" & health_status == "L") %>%
data.frame() -> D03E
#fit mixture
#   Modeling diameter distributions of grouped
# data using finite mixture models
# The fitmixturegrouped function provides an interface for
# fitting a wide-range of finite mixture distributions to grouped
# data and takes the form
fitmixture(D03E$dbh_cm, "log-normal", 3)
# parameters from model
weight <- c(0.280, 0.236, 0.4833)
alpha <- c(3.044, 3.418, 2.304)
beta <- c(0.13868, 0.1036, 0.2514)
param <- c(weight, alpha, beta)
XX <- seq(0, max(D03E$dbh_cm), 0.01)
pdf <- dmixture(XX, "log-normal", 3, param)
x11()
hist(D03E$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40))
lines(XX, pdf, col = "blue")
# filter to plot
inv %>%
filter(subplot_id == "A04W" & health_status == "L") %>%
data.frame() -> A04W
#fit mixture
fitmixture(A04W$dbh_cm, "log-normal", 3)
# parameters from model
weight2 <- c(0.6989, 0.067, 0.234)
alpha2 <- c(2.725, 3.937, 3.414)
beta2 <- c(0.2912, 0.0816, 0.155)
param2 <- c(weight2, alpha2, beta2)
XX2 <- seq(0, max(A04W$dbh_cm), 0.01)
pdf2 <- dmixture(XX2, "log-normal", 3, param2)
x11()
hist(D03E$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40),
col = rgb(255,192,203, max = 255, alpha = 200), xlab="DBH [cm]", main = "")
hist(A04W$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40),
col = rgb(173,216,230, max = 255, alpha = 200), add = TRUE,
xlab="DBH [cm]", main = "")
lines(XX, pdf, col = "red", lwd = 3)
lines(XX2, pdf2, col = "blue4", lwd = 3)
#
D03E %>%
dplyr::group_by(as.factor(species)) %>%
summarise(total.dbh = sum(dbh_cm, na.rm = TRUE), .groups = 'drop')
> c1 <- rgb(173,216,230,max = 255, alpha = 80, names = "lt.blue")
c1 <- rgb(173,216,230,max = 255, alpha = 80, names = "lt.blue")
c2 <- rgb(255,192,203, max = 255, alpha = 80, names = "lt.pink")
hgA <- hist(A04W$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40),
col = rgb(red = 0, green = 0, blue = 1, alpha = 0.5), plot = FALSE) # Save first histogram data
hgB <- hist(D03E$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40), plot = FALSE) # Save 2nd histogram data
x11()
plot(hgA$density, col = "blue") # Plot 1st histogram using a transparent color
plot(hgB$density, col = "red", add = TRUE) # Add 2nd histogram using different color
lines(XX, pdf, col = "blue")
lines(XX2, pdf2, col = "green")
inv <- fortedata::fd_inventory()
# filter to plot
inv %>%
filter(subplot_id == "D03E" & health_status == "L") %>%
data.frame() -> D03E
#fit mixture
#   Modeling diameter distributions of grouped
# data using finite mixture models
# The fitmixturegrouped function provides an interface for
# fitting a wide-range of finite mixture distributions to grouped
# data and takes the form
fitmixture(D03E$dbh_cm, "log-normal", 3)
# parameters from model
weight <- c(0.280, 0.236, 0.4833)
alpha <- c(3.044, 3.418, 2.304)
beta <- c(0.13868, 0.1036, 0.2514)
param <- c(weight, alpha, beta)
XX <- seq(0, max(D03E$dbh_cm), 0.01)
pdf <- dmixture(XX, "log-normal", 3, param)
x11()
hist(D03E$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40))
lines(XX, pdf, col = "blue")
# filter to plot
inv %>%
filter(subplot_id == "A04W" & health_status == "L") %>%
data.frame() -> A04W
#fit mixture
fitmixture(A04W$dbh_cm, "log-normal", 3)
# parameters from model
weight2 <- c(0.6989, 0.067, 0.234)
alpha2 <- c(2.725, 3.937, 3.414)
beta2 <- c(0.2912, 0.0816, 0.155)
param2 <- c(weight2, alpha2, beta2)
XX2 <- seq(0, max(A04W$dbh_cm), 0.01)
pdf2 <- dmixture(XX2, "log-normal", 3, param2)
x11()
hist(D03E$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40),
col = rgb(255,192,203, max = 255, alpha = 200), xlab="DBH [cm]", main = "")
hist(A04W$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40),
col = rgb(173,216,230, max = 255, alpha = 200), add = TRUE,
xlab="DBH [cm]", main = "")
lines(XX, pdf, col = "red", lwd = 3)
lines(XX2, pdf2, col = "blue4", lwd = 3)
#
D03E %>%
dplyr::group_by(as.factor(species)) %>%
summarise(total.dbh = sum(dbh_cm, na.rm = TRUE), .groups = 'drop')
c1 <- rgb(173,216,230,max = 255, alpha = 80, names = "lt.blue")
c2 <- rgb(255,192,203, max = 255, alpha = 80, names = "lt.pink")
hgA <- hist(A04W$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40),
col = rgb(red = 0, green = 0, blue = 1, alpha = 0.5), plot = FALSE) # Save first histogram data
hgB <- hist(D03E$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40), plot = FALSE) # Save 2nd histogram data
x11()
plot(hgA$density, col = "blue") # Plot 1st histogram using a transparent color
plot(hgB$density, col = "red", add = TRUE) # Add 2nd histogram using different color
lines(XX, pdf, col = "blue")
lines(XX2, pdf2, col = "green")
fitmixture(A04W$dbh_cm, "log-normal", 3)
?fitmixture
#fit mixture
fitmixture(A04W$dbh_cm, "log-normal", 3)
fitmixture(A04W$dbh_cm,  "birnbaum-saunders", 3)
fitmixture(A04W$dbh_cm, "f", 3)
fitmixture(A04W$dbh_cm, "weibull", 3)
fitmixture(A04W$dbh_cm, "f", 3)
fitmixture(A04W$dbh_cm, "log-logistic", 3)
fitmixture(A04W$dbh_cm, "gamma", 3)
inv %>%
filter(subplot_id == "D03E" & health_status == "L") %>%
data.frame() -> outwash.plain
#fit mixture
fitmixture(outwash.plain$dbh_cm, "log-normal", 3)
fitmixture(moraine$dbh_cm, "log-normal", 3)
inv %>%
filter(subplot_id == "A04W" & health_status == "L") %>%
data.frame() -> moraine
#fit mixture
fitmixture(moraine$dbh_cm, "log-normal", 3)
fitmixture(moraine$dbh_cm, "log-logistic", 3)
fitmixture(moraine$dbh_cm, "weibull", 3)
fitmixture(moraine$dbh_cm, "gamma", 3)
fitmixture(outwash.plain$dbh_cm, "log-normal", 3)
fitmixture(outwash.plain$dbh_cm, "log-logistic", 3)
fitmixture(outwash.plain$dbh_cm, "weibull", 3)
fitmixture(outwash.plain$dbh_cm, "gamma", 3)
fitmixture(moraine$dbh_cm, "gamma", 3)
# parameters from model moraine
weight <- c(0.399, 0.165, 0.434)
alpha <- c(36.453, 29.525, 22.531)
beta <- c(0.651, 1.471, 0.583)
param <- c(weight, alpha, beta)
XX <- seq(0, max(moraine$dbh_cm), 0.01)
pdf <- dmixture(XX, "log-logistic", 3, param)
pdf <- dmixture(XX, "gamma", 3, param)
fitmixture(outwash.plain$dbh_cm, "log-logistic", 3)
# parameters from model outwash plain
weight2 <- c(0.233, 0.478, 0.287)
alpha2 <- c(16.078, 7.435, 12.103)
beta2 <- c(30.396, 10.019, 21.199)
param2 <- c(weight2, alpha2, beta2)
XX2 <- seq(0, max(outwash.plain$dbh_cm), 0.01)
pdf2 <- dmixture(XX2, "log-logistic", 3, param2)
x11()
hist(moraine$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40),
col = rgb(255,192,203, max = 255, alpha = 200), xlab="DBH [cm]", main = "")
hist(outwash.plain$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40),
col = rgb(173,216,230, max = 255, alpha = 200), add = TRUE,
xlab="DBH [cm]", main = "")
lines(XX, pdf, col = "red", lwd = 3)
lines(XX2, pdf2, col = "blue4", lwd = 3)
inv <- fortedata::fd_inventory()
# filter to plot
inv %>%
filter(subplot_id == "A04W" & health_status == "L") %>%
data.frame() -> moraine
# filter to plot
inv %>%
filter(subplot_id == "D03E" & health_status == "L") %>%
data.frame() -> outwash.plain
#fit mixture
fitmixture(moraine$dbh_cm, "log-normal", 3)
fitmixture(moraine$dbh_cm, "log-logistic", 3)
fitmixture(moraine$dbh_cm, "weibull", 3)
fitmixture(moraine$dbh_cm, "gamma", 3)
#fit mixture
fitmixture(outwash.plain$dbh_cm, "log-normal", 3)
fitmixture(outwash.plain$dbh_cm, "log-logistic", 3)
fitmixture(outwash.plain$dbh_cm, "weibull", 3)
fitmixture(outwash.plain$dbh_cm, "gamma", 3)
# parameters from model moraine
weight <- c(0.399, 0.165, 0.434)
alpha <- c(36.453, 29.525, 22.531)
beta <- c(0.651, 1.471, 0.583)
param <- c(weight, alpha, beta)
XX <- seq(0, max(moraine$dbh_cm), 0.01)
pdf <- dmixture(XX, "gamma", 3, param)
# parameters from model outwash plain
weight2 <- c(0.233, 0.478, 0.287)
alpha2 <- c(16.078, 7.435, 12.103)
beta2 <- c(30.396, 10.019, 21.199)
param2 <- c(weight2, alpha2, beta2)
XX2 <- seq(0, max(outwash.plain$dbh_cm), 0.01)
pdf2 <- dmixture(XX2, "log-logistic", 3, param2)
x11()
hist(moraine$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40),
col = rgb(255,192,203, max = 255, alpha = 200), xlab="DBH [cm]", main = "")
hist(outwash.plain$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40),
col = rgb(173,216,230, max = 255, alpha = 200), add = TRUE,
xlab="DBH [cm]", main = "")
lines(XX, pdf, col = "red", lwd = 3)
lines(XX2, pdf2, col = "blue4", lwd = 3)
x11()
hist(moraine$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40),
col = rgb(255,192,203, max = 255, alpha = 200), xlab="DBH [cm]", main = "")
hist(outwash.plain$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40),
col = rgb(173,216,230, max = 255, alpha = 200), add = TRUE,
xlab="DBH [cm]", main = "")
lines(XX, pdf, col = "red", lwd = 3)
lines(XX2, pdf2, col = "blue4", lwd = 3)
x11()
hist(moraine$dbh_cm, freq=FALSE, breaks = 25,  xlim = c(0, 40),
col = rgb(255,192,203, max = 255, alpha = 200), xlab="DBH [cm]", main = "")
hist(outwash.plain$dbh_cm, freq=FALSE, breaks = 25,  xlim = c(0, 40),
col = rgb(173,216,230, max = 255, alpha = 200), add = TRUE,
xlab="DBH [cm]", main = "")
lines(XX, pdf, col = "red", lwd = 3)
lines(XX2, pdf2, col = "blue4", lwd = 3)
x11()
hist(moraine$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40), ylim = c(0, 0.1),
col = rgb(255,192,203, max = 255, alpha = 200), xlab="DBH [cm]", main = "")
hist(outwash.plain$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40), ylim = c(0, 0.1),
col = rgb(173,216,230, max = 255, alpha = 200), add = TRUE,
xlab="DBH [cm]", main = "")
lines(XX, pdf, col = "red", lwd = 3)
lines(XX2, pdf2, col = "blue4", lwd = 3)
x11()
hist(moraine$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40), ylim = c(0, 0.12),
col = rgb(255,192,203, max = 255, alpha = 200), xlab="DBH [cm]", main = "")
hist(outwash.plain$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40), ylim = c(0, 0.12),
col = rgb(173,216,230, max = 255, alpha = 200), add = TRUE,
xlab="DBH [cm]", main = "")
lines(XX, pdf, col = "red", lwd = 3)
lines(XX2, pdf2, col = "blue4", lwd = 3)
fitmixture(moraine$dbh_cm, "gamma", 3)
# parameters from model moraine
weight <- c(0.165, 0.434, 0.399)
alpha <- c(29.525, 22.531, 36.454)
beta <- c(1.471, 0.583, 0.651)
param <- c(weight, alpha, beta)
XX <- seq(0, max(moraine$dbh_cm), 0.01)
pdf <- dmixture(XX, "gamma", 3, param)
# parameters from model outwash plain
weight2 <- c(0.233, 0.478, 0.287)
alpha2 <- c(16.078, 7.435, 12.103)
beta2 <- c(30.396, 10.019, 21.199)
param2 <- c(weight2, alpha2, beta2)
XX2 <- seq(0, max(outwash.plain$dbh_cm), 0.01)
pdf2 <- dmixture(XX2, "log-logistic", 3, param2)
x11()
hist(moraine$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40), ylim = c(0, 0.12),
col = rgb(255,192,203, max = 255, alpha = 200), xlab="DBH [cm]", main = "")
hist(outwash.plain$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40), ylim = c(0, 0.12),
col = rgb(173,216,230, max = 255, alpha = 200), add = TRUE,
xlab="DBH [cm]", main = "")
lines(XX, pdf, col = "red", lwd = 3)
lines(XX2, pdf2, col = "blue4", lwd = 3)
#
D03E %>%
dplyr::group_by(as.factor(species)) %>%
summarise(total.dbh = sum(dbh_cm, na.rm = TRUE), .groups = 'drop')
c1 <- rgb(173,216,230,max = 255, alpha = 80, names = "lt.blue")
c2 <- rgb(255,192,203, max = 255, alpha = 80, names = "lt.pink")
hgA <- hist(A04W$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40),
col = rgb(red = 0, green = 0, blue = 1, alpha = 0.5), plot = FALSE) # Save first histogram data
hgB <- hist(D03E$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40), plot = FALSE) # Save 2nd histogram data
x11()
plot(hgA$density, col = "blue") # Plot 1st histogram using a transparent color
plot(hgB$density, col = "red", add = TRUE) # Add 2nd histogram using different color
lines(XX, pdf, col = "blue")
lines(XX2, pdf2, col = "green")
c1 <- rgb(173,216,230,max = 255, alpha = 80, names = "lt.blue")
c2 <- rgb(255,192,203, max = 255, alpha = 80, names = "lt.pink")
hgA <- hist(moraine$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40),
col = rgb(red = 0, green = 0, blue = 1, alpha = 0.5), plot = FALSE) # Save first histogram data
hgB <- hist(outwash.plain$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40), plot = FALSE) # Save 2nd histogram data
x11()
plot(hgA$density, col = "blue") # Plot 1st histogram using a transparent color
plot(hgB$density, col = "red", add = TRUE) # Add 2nd histogram using different color
lines(XX, pdf, col = "blue")
lines(XX2, pdf2, col = "green")
x11()
hist(moraine$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40), ylim = c(0, 0.12),
col = rgb(255,192,203, max = 255, alpha = 200), xlab="DBH [cm]", main = "")
hist(outwash.plain$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40), ylim = c(0, 0.12),
col = rgb(173,216,230, max = 255, alpha = 200), add = TRUE,
xlab="DBH [cm]", main = "")
lines(XX, pdf, col = "red", lwd = 3)
lines(XX2, pdf2, col = "blue4", lwd = 3)
x11()
hist(moraine$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40), ylim = c(0, 0.12),
col = rgb(255,192,203, max = 255, alpha = 200), xlab="DBH [cm]", main = "")
hist(outwash.plain$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40), ylim = c(0, 0.12),
col = rgb(173,216,230, max = 255, alpha = 200), add = TRUE,
xlab="DBH [cm]", main = "")
lines(XX, pdf, col = "red", lwd = 3)
lines(XX2, pdf2, col = "blue4", lwd = 3)+
legend("topright", c("Moraine", "Outwash Plain"), fill=c("blue", "red"))
x11()
hist(moraine$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40), ylim = c(0, 0.12),
col = rgb(255,192,203, max = 255, alpha = 200), xlab="DBH [cm]", main = "")
# hist(outwash.plain$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40), ylim = c(0, 0.12),
#      col = rgb(173,216,230, max = 255, alpha = 200), add = TRUE,
#      xlab="DBH [cm]", main = "")
lines(XX, pdf, col = "red", lwd = 3)
lines(XX2, pdf2, col = "blue4", lwd = 3)+
legend("topright", c("Moraine", "Outwash Plain"), fill=c("blue", "red"))
x11()
hist(moraine$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40), ylim = c(0, 0.12),
col = rgb(255,192,203, max = 255, alpha = 200), xlab="DBH [cm]", main = "")
hist(outwash.plain$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40), ylim = c(0, 0.12),
col = rgb(173,216,230, max = 255, alpha = 200), add = TRUE,
xlab="DBH [cm]", main = "")
lines(XX, pdf, col = "red", lwd = 3)
lines(XX2, pdf2, col = "blue4", lwd = 3)+
legend("topright", c("Moraine", "Outwash Plain"), fill=c("red", "blue"))
x11()
hist(moraine$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40), ylim = c(0, 0.12),
col = rgb(255,192,203, max = 255, alpha = 200), xlab="DBH [cm]", main = "")
hist(outwash.plain$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40), ylim = c(0, 0.12),
col = rgb(173,216,230, max = 255, alpha = 200), add = TRUE,
xlab="DBH [cm]", main = "")
lines(XX, pdf, col = "red", lwd = 3)+
lines(XX2, pdf2, col = "blue4", lwd = 3)+
legend("topright", c("Moraine", "Outwash Plain"), fill=c("red", "blue"))
x11()
hist(moraine$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40), ylim = c(0, 0.12),
col = rgb(255,192,203, max = 255, alpha = 200), xlab="DBH [cm]", main = "")
hist(outwash.plain$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40), ylim = c(0, 0.12),
col = rgb(173,216,230, max = 255, alpha = 200), add = TRUE,
xlab="DBH [cm]", main = "")
lines(XX, pdf, col = "red", lwd = 3)
lines(XX2, pdf2, col = "blue4", lwd = 3)
legend("topright", c("Moraine", "Outwash Plain"), fill=c("red", "blue"))
x11()
hist(moraine$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40), ylim = c(0, 0.12),
col = rgb(255,192,203, max = 255, alpha = 200), xlab="DBH [cm]", main = "")
hist(outwash.plain$dbh_cm, freq=FALSE, breaks = 20,  xlim = c(0, 40), ylim = c(0, 0.12),
col = rgb(173,216,230, max = 255, alpha = 200), add = TRUE,
xlab="DBH [cm]", main = "")
lines(XX, pdf, col = "red", lwd = 3)
lines(XX2, pdf2, col = "blue4", lwd = 3)
legend("topright", c("Moraine", "Outwash Plain"), fill=c("red", "blue"))
knitr::opts_chunk$set(echo = TRUE)
## Download the state subset or Connecticut (requires an internet connection)
## Save as an object to automatically load the data into your current R session!
getFIA(states = 'VA', dir = './data/fia/')
