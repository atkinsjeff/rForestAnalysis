"BIEN",
"forestChange",
"rForest",
"HMB",
"forestmangr",
"ForestTools",
"FI",
"forestSAS",
"measuRing",
"detrendeR",
"burnr",
"TRADER",
"treeclim",
"pointRes",
"dendroTools",
"BIOdry",
"dendrometeR",
"tracheideR",
"RAPTOR",
"DendroSync"))
x
x11()
ggplot(x.sums, aes(x = days.on.cran, y = total.downloads, label = package))+
geom_point() +
geom_label_repel(
arrow = arrow(length = unit(0.03, "npc"), type = "closed", ends = "first"),
force = 10
)+
stat_smooth(method = "lm")
x11()
ggplot(x.sums, aes(x = days.on.cran, y = total.downloads, label = package))+
geom_point() +
geom_label_repel(
arrow = arrow(length = unit(0.03, "npc"), type = "closed", ends = "first"),
force = 10
)+
stat_smooth(method = "lm", se = FALSE)
x11()
ggplot(x.sums, aes(x = days.on.cran, y = total.downloads, label = package))+
geom_point()+
stat_smooth(method = "lm")+
geom_label_repel(
arrow = arrow(length = unit(0.03, "npc"), type = "closed", ends = "first"),
force = 10
)
x11()
ggplot(x.sums, aes(x = days.on.cran, y = total.downloads, label = package))+
geom_point()+
stat_smooth(method = "lm")+
geom_label_repel(
type = "closed", ends = "first"),
force = 10
)
x11()
ggplot(x.sums, aes(x = days.on.cran, y = total.downloads, label = package))+
geom_point()+
stat_smooth(method = "lm")+
geom_label_repel(
force = 10
)
x11()
ggplot(x.sums, aes(x = days.on.cran, y = total.downloads, label = package))+
geom_point()+
stat_smooth(method = "lm")+
geom_label_repel(min.segment.length = unit(0, 'lines'),
nudge_y = 6)+
ylab("Total Downloads")+
xlab("Days on CRAN")
x11()
ggplot(x.sums, aes(x = days.on.cran, y = total.downloads, label = package))+
geom_point()+
stat_smooth(method = "lm")+
theme_bw()+
geom_label_repel(min.segment.length = unit(0, 'lines'),
nudge_y = 6)+
ylab("Total Downloads")+
xlab("Days on CRAN")
x11()
ggplot(x.sums, aes(x = days.on.cran, y = total.downloads, label = package))+
geom_point()+
stat_smooth(method = "lm")+
theme_classic()+
geom_label_repel(min.segment.length = unit(0, 'lines'),
nudge_y = 6)+
ylab("Total Downloads")+
xlab("Days on CRAN")
x11()
ggplot(x.sums, aes(x = days.on.cran, y = total.downloads, label = package))+
geom_point()+
stat_smooth(method = "lm")+
theme_minimal()+
geom_label_repel(min.segment.length = unit(0, 'lines'),
nudge_y = 6)+
ylab("Total Downloads")+
xlab("Days on CRAN")
x11(width = 8, height = 5)
ggplot(x.sums, aes(x = days.on.cran, y = total.downloads, label = package))+
geom_point()+
stat_smooth(method = "lm")+
theme_minimal()+
geom_label_repel(min.segment.length = unit(0, 'lines'),
nudge_y = 6)+
ylab("Total Downloads")+
xlab("Days on CRAN")
library("ggplot2")
library("dlstats")
require(tidyverse)
require(ggrepel)
# import cran stats
x <- cran_stats(c("forestinventory",
"ForestGapR",
"rLiDAR",
"leafR",
"lidR",
"rGEDI",
"rFIA",
"lmfor",
"forestr",
"ForIT",
"BIEN",
"forestChange",
"rForest",
"HMB",
"forestmangr",
"ForestTools",
"FI",
"forestSAS",
"measuRing",
"detrendeR",
"burnr",
"TRADER",
"treeclim",
"pointRes",
"dendroTools",
"BIOdry",
"dendrometeR",
"tracheideR",
"RAPTOR",
"DendroSync",
"fgeo",
"BIOMASS",
"Fgmutils",
"DGVM3D",
"FAwR",
"fdq",
"forestHES",
"gfcanalysis",
"medfate",
"r3PG",
"ShapeSelectForest",
"TreeLS",
"Sky",
"chillR",
"phenesse",
"phenex",
"phenmod",
"pheno",
"phenocamapi",
"phenocamr",
"phenoCDM",
"phenofit",
"phenopix",
"phenomap",
"hsdar".
"hyperspec"
))
library("ggplot2")
library("dlstats")
require(tidyverse)
require(ggrepel)
# import cran stats
x <- cran_stats(c("forestinventory",
"ForestGapR",
"rLiDAR",
"leafR",
"lidR",
"rGEDI",
"rFIA",
"lmfor",
"forestr",
"ForIT",
"BIEN",
"forestChange",
"rForest",
"HMB",
"forestmangr",
"ForestTools",
"FI",
"forestSAS",
"measuRing",
"detrendeR",
"burnr",
"TRADER",
"treeclim",
"pointRes",
"dendroTools",
"BIOdry",
"dendrometeR",
"tracheideR",
"RAPTOR",
"DendroSync",
"fgeo",
"BIOMASS",
"Fgmutils",
"DGVM3D",
"FAwR",
"fdq",
"forestHES",
"gfcanalysis",
"medfate",
"r3PG",
"ShapeSelectForest",
"TreeLS",
"Sky",
"chillR",
"phenesse",
"phenex",
"phenmod",
"pheno",
"phenocamapi",
"phenocamr",
"phenoCDM",
"phenofit",
"phenopix",
"phenomap",
"hsdar",
"hyperspec"
))
x$days_on_CRAN <- x$end - x$start
x$days_on_CRAN <- as.integer(x$days_on_CRAN)
x %>%
group_by(package) %>%
summarize(total.downloads = sum(downloads, na.rm = TRUE),
days.on.cran = sum(days_on_CRAN, na.rm = TRUE)) -> x.sums
x11(width = 8, height = 5)
ggplot(x.sums, aes(x = days.on.cran, y = total.downloads, label = package))+
geom_point()+
stat_smooth(method = "lm")+
theme_minimal()+
geom_label_repel(min.segment.length = unit(0, 'lines'),
nudge_y = 6)+
ylab("Total Downloads")+
xlab("Days on CRAN")
install.packages('phenopix')
require(phenopix)
?structureFolder
knitr::opts_chunk$set(echo = TRUE)
structureFolder("./data/phenology")
```## Including Plots
dir.create("./data/phenology")
# Then strucutre this to work with the Phenopix package based on an package function
structureFolder("./data/phenology")
DrawROI()
browseVignettes("phenopix")
browseVignettes(phenopix)
library(phenopix)
browseVignettes(phenopix)
browseVignettes()
knitr::opts_chunk$set(echo = TRUE)
plotImage <- function(image, ...) {
+ ncols <- ncol(image)
+ nrows <- nrow(image)
+ suppressWarnings(plot(0,
+ type='n', xlim=c(0, ncols),
plotImage <- function(image, ...) {
ncols <- ncol(image),
plotImage <- function(image, ...) {
ncols <- ncol(image)
nrows <- nrow(image)
suppressWarnings(plot(0, type='n', xlim=c(0, ncols), ylim=c(0, nrows), ...))
suppressWarnings(rasterImage(image, xleft=0, ybottom=0, xright=ncols, ytop=nrows, ...))
}
list.files("./data/")
list.files("./data/phenology")
list.files("./data/phenology/REF")
img <- jpeg::readJPEG("./data/phenology/REF/pace_2018_04_01_102107.jpg")
plotImage(img)
img
DrawROI()
require(phenopix)
?phenopix
DrawMULTIROI()
structureFolder("./data/phenology")
list.files("./data/phenology/REF")
DrawMULTIROI()
path_img_ref("./data/phenology/REF/pace_2018_04_01_102107.jpg")
DrawMULTIROI([ath = "./data/phenology/REF/pace_2018_04_01_102107.jpg"])
DrawMULTIROI(path = "./data/phenology/REF/pace_2018_04_01_102107.jpg"])
?DrawMULTIROI
DrawMULTIROI(path_img_ref =  "./data/phenology/REF/pace_2018_04_01_102107.jpg"])
DrawMULTIROI(path_img_ref =  "./data/phenology/REF/pace_2018_04_01_102107.jpg")
if(!require(phenocamr)){install.package("phenocamr")}
if(!require(phenocamr)){install.packages("phenocamr")}
library(phenocamr)
download_phenocam(site = "pace",
veg_type = "DB",
frequency = 3,
phenophases = TRUE,
out_dir = "~")
download_phenocam(site = "pace",
veg_type = "DB",
frequency = 3,
out_dir = "~")
download_phenocam(site = "pace",
veg_type = "DB",
frequency = 3,
out_dir = "./data/phenology")
?download_phenocam
download_phenocam(site = "pace",
veg_type = "DB",
frequency = 3,
phenophase = TRUE,
out_dir = "./data/phenology")
list.files("./data/phenology")
# read in the transition date file
td <- read.table("./data/phenology/pace_DB_1000_3day.csv",
header = TRUE,
sep = ",")
head(td)
str(td)
str(df)
df <- read.table("./data/phenology/pace_DB_1000_3day.csv",
header = TRUE,
sep = ",")
head(df)
df$date <- as.Date(df$date)
list.files("./data/phenology")
# load the time series data
td <- read.table("./data/phenology/pace_DB_1000_3day_transition_dates.csv", header = TRUE, sep = ",")
# select the rising (spring dates) for 25% threshold of Gcc 90
td <- td[td$direction == "rising" & td$gcc_value == "gcc_90",]
plot(as.Date(df$date), df$smooth_gcc_90, type = "l", xlab = "Date",
ylab = "Gcc (90th percentile)")
points(x = as.Date(td$transition_25, origin = "1970-01-01"),
y = td$threshold_25,
pch = 19,
col = "red")
install.packages("fgeo")
require(fgeo)
#
require(ggplot2)
require(tidyverse)
require(data.table)
# importing journal title
filenames <- list.files(path = "./data", pattern = "journal", full.names = TRUE)
l <- lapply(filenames, fread, select = c("Source Titles", "records"), sep = "\t", nrows = 40)
names(l) <- basename(filenames)
#bind the rows from the list togetgher, putting the filenames into the colum "id"
df.journals <- rbindlist( l, idcol = "id" )
df.journals$year <- as.numeric(substr(df.journals$id, 0, 4))
# importing research areas
filenames <- list.files(path = "./data", pattern = "research", full.names = TRUE)
l <- lapply(filenames, fread, select = c("Research Areas", "records"), sep = "\t")
names(l) <- basename(filenames)
#bind the rows from the list togetgher, putting the filenames into the colum "id"
df.research <- rbindlist( l, idcol = "id" )
df.research$year <-  as.integer(substr(df.research$id, 0, 4))
df.research  %>%
filter(`Research Areas` %in% c("ENVIRONMENTAL SCIENCES ECOLOGY", "FORESTRY", "REMOTE SENSING", "EVOLUTIONARY BIOLOGY",
"WATER RESOURCES", "BIODIVERSITY CONSERVATION", "PLANT SCIENCES")) %>%
data.frame() -> x
x11()
ggplot(x, aes(x = year, y = records, color = Research.Areas)) +
geom_line()
#### bring in all area data
# importing research areas
filenames <- list.files(path = "./data", pattern = "all", full.names = TRUE)
l <- lapply(filenames, fread, select = c("Research Areas", "records"), sep = "\t", nrows = 300)
names(l) <- basename(filenames)
#bind the rows from the list togetgher, putting the filenames into the colum "id"
df.all <- rbindlist( l, idcol = "id" )
df.all$year <-  as.integer(substr(df.all$id, 0, 4))
df.all  %>%
filter(`Research Areas` %in% c("ENVIRONMENTAL SCIENCES ECOLOGY", "FORESTRY", "REMOTE SENSING", "EVOLUTIONARY BIOLOGY",
"WATER RESOURCES", "BIODIVERSITY CONSERVATION", "PLANT SCIENCES")) %>%
data.frame() -> y
x$id <- NULL
y$id <- NULL
x$Research.Areas <- as.factor(x$Research.Areas)
y$Research.Areas <- as.factor(y$Research.Areas)
# now to change names
setnames(y, "records", "all.records")
z <- merge(x, y)
z$ratio <- z$records / z$all.records
scale_color_manual(
values = c(
"ENVIRONMENTAL SCIENCES ECOLOGY" = "#e41a1c",
"FORESTRY" ="#377eb8",
"REMOTE SENSING" = "#4daf4a",
"EVOLUTIONARY BIOLOGY" = "#984ea3",
"WATER RESOURCES" ="#ff7f00",
"BIODIVERSITY CONSERVATION" = "#ffff33",
"PLANT SCIENCES" = "#a65628"))
z %>%
filter(year != 2020) -> zz
#
x11(width = 8, height = 3)
ggplot(zz, aes(x = as.integer(year), y = (ratio * 100), color = Research.Areas)) +
geom_line(size = 2, alpha = 0.6)+
geom_point(size = 3, shape = 21, fill = "white")+
scale_color_manual(
values = c(
"ENVIRONMENTAL SCIENCES ECOLOGY" = "#e41a1c",
"FORESTRY" ="#377eb8",
"REMOTE SENSING" = "#4daf4a",
"EVOLUTIONARY BIOLOGY" = "#984ea3",
"WATER RESOURCES" ="#ff7f00",
"BIODIVERSITY CONSERVATION" = "dark grey",
"PLANT SCIENCES" = "#a65628"))+
theme_minimal()+
xlab("")+
ylab(expression(atop("Literature Citing", paste("the R Programming Language (%)"))))+
scale_x_continuous(
labels = scales::number_format(accuracy = 1, big.mark = ""))
z %>%
filter(Research.Areas == "FORESTRY") -> df.for
df.for$ratio.all <- (1 - df.for$ratio)
df.for %>%
select(year, ratio, ratio.all) -> df.for2
df.for3 <- gather(data = df.for2, key = component, value = percent, -year)
#df.for3$component <- rev(levels(df.for3$component))
df.for3$component <- sort(df.for3$component, decreasing = TRUE)
x11()
ggplot(df.for3, aes(x = as.numeric(year), y = percent, fill = component))+
geom_area(alpha = 0.6, size = 1, color = "black")
z %>%
filter(Research.Areas == "ENVIRONMENTAL SCIENCES ECOLOGY") -> df.eco
df.eco$ratio.all <- (1 - df.eco$ratio)
df.eco %>%
select(year, ratio, ratio.all) -> df.eco2
df.eco3 <- gather(data = df.eco2, key = component, value = percent, -year)
#df.eco3$component <- rev(levels(df.eco3$component))
df.eco3$component <- sort(df.eco3$component, decreasing = TRUE)
x11()
ggplot(df.eco3, aes(x = as.numeric(year), y = percent, fill = component))+
geom_area(alpha = 0.6, size = 1, color = "black")
# importing journal title
filenames <- list.files(path = "./data", pattern = "journal", full.names = TRUE)
l <- lapply(filenames, fread, select = c("Source Titles", "records"), sep = "\t", nrows = 50)
names(l) <- basename(filenames)
#bind the rows from the list togetgher, putting the filenames into the colum "id"
df.journals <- rbindlist( l, idcol = "id" )
journal.list <- data.frame(unique(df.journals$`Source Titles`))
df.journals$year <- as.numeric(substr(df.journals$id, 0, 4))
#write.csv(journal.list, "./data/journal_list.csv")
# brings in the top 20 journals per Google Metrics
classes <- read.csv("./data/journal_classes.csv")
# moves to upper case
classes$journal_title <- as.factor(toupper(classes$journal_title))
names(df.journals)[2] <- "journal_title"
# reformat for merging
df.journals$id <- NULL
df.journals$journal_title <- as.factor(df.journals$journal_title)
df <- merge(df.journals, classes)
df %>%
group_by(class, year) %>%
summarize(sum.recs = sum(records)) -> df.sums
x11()
ggplot(df.sums, aes(x = year, y = sum.recs, color = class))+
geom_line(size = 2)
# [37] "total_ecology_pubs_by_year.txt"
# [38] "total_ecology_pubs_for2010_to_2019.txt"
# [39] "total_forestry_pubs_by_year.txt"
# [40] "total_forestry_pubs_for2010_to_2019.txt"
# total ecology pubs
total.eco <- read_delim("./data/total_ecology_pubs_by_year.txt", delim = "\t")
names(total.eco)[1] <- "year"
total.eco <- total.eco[,c(1,2)]
total.eco <- total.eco[-12,]
total.eco$class = as.factor("ecology")
# total forestry pubs
total.for <- read_delim("./data/total_forestry_pubs_by_year.txt", delim = "\t")
names(total.for)[1] <- "year"
total.for <- total.for[,c(1,2)]
total.for <- total.for[-12,]
total.for$class = as.factor("forestry")
total.for
totals <- rbind(total.eco, total.for)
big.boi <- merge(df.sums, totals)
big.boi$propR <- big.boi$sum.recs / big.boi$records
x11(width = 8, height = 3)
ggplot(big.boi, aes(x = year, y = propR, color = class))+
geom_line(size = 2, alpha = 0.6)+
geom_point(size = 3, shape = 21, fill = "white")+
theme_minimal()+
scale_x_continuous(
labels = scales::number_format(accuracy = 1, big.mark = ""))+
scale_color_manual(
name="Journal Class",
values = c(
"ecology" = "#e41a1c",
"forestry" ="#377eb8"))+
xlab("")+
ylab(expression(atop("Citations of the R Programming Language", paste("in the top 20 journals of each field (%)"))))
x11(width = 8, height = 3)
ggplot(zz, aes(x = as.integer(year), y = (ratio * 100), color = Research.Areas)) +
geom_line(size = 2, alpha = 0.6)+
geom_point(size = 3, shape = 21, fill = "white")+
scale_color_manual(
values = c(
"ENVIRONMENTAL SCIENCES ECOLOGY" = "#e41a1c",
"FORESTRY" ="#377eb8",
"REMOTE SENSING" = "#4daf4a",
"EVOLUTIONARY BIOLOGY" = "#984ea3",
"WATER RESOURCES" ="#ff7f00",
"BIODIVERSITY CONSERVATION" = "dark grey",
"PLANT SCIENCES" = "#a65628"))+
theme_minimal()+
xlab("")+
ylab(expression(atop("Literature Citing", paste("the R Programming Language (%)"))))+
scale_x_continuous(
labels = scales::number_format(accuracy = 1, big.mark = ""))
